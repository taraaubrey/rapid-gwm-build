# TODO
# - how does Simulation know that it needs a discretization module?
# - how does Simulation know what a tdis module is?
write:
    # 0: {func: ['@module.sim', 'set_all_data_external']}
    0: {func: ['@module.sim', 'write_simulation']}

module_templates:
    obs:
        func: 'flopy.mf6.modflow.mfutlobs'
        duplicates_allowed: True
        build_dependencies: 
            model: '@module.gwf' # referencing {modules.gwf..output}
    
    sim:
        func: 'flopy.mf6.MFSimulation'
        duplicates_allowed: False
        default_build:
            allowed: True

    tdis:
        build_dependencies: 
            simulation: '@module.sim'
        # parameters:
        #     period_data: ['nper', 'perlen', 'nstp', 'steady'] #TODO: this is a special list of adjustable parameters which are not explicitly called
        func: 'flopy.mf6.ModflowTdis'
        duplicates_allowed: False
        default_build:
            allowed: True
            parameters:
                time_units: 'days'
                start_date_time: '2020-01-01'
                nper: 1
                perioddata:
                    - [1., 1, 1.] # perlen, nstp, tsmult

    ims:
        build_dependencies: 
            simulation: '@module.sim'
        func: 'flopy.mf6.ModflowIms'
        duplicates_allowed: False
        default_build:
            allowed: True


    ## GWF packages ----------------------
    gwf:
        build_dependencies: 
            simulation: '@module.sim'
        func: 'flopy.mf6.ModflowGwf'
        duplicates_allowed: True
        default_build:
            allowed: True

    npf: 
        build_dependencies: 
            model: '@module.gwf' # referencing {modules.gwf..output}
        func: 'flopy.mf6.ModflowGwfnpf'
        duplicates_allowed: True
        default_build:
            allowed: True

    dis:
        build_dependencies: 
            model: '@module.gwf'
            nlay: '@mesh.nlay'
            nrow: '@mesh.nrow'
            ncol: '@mesh.ncol'
            delr: 
                pipeline:
                    input: '@mesh.delr'
                    pipes:
                        - processor: to_mf6_txt
                          type: array
                          output_format: '{filename}'
                          # output: (input.dis.nlay).data'@mesh.delr'
            delc:
                pipeline:
                    input: '@mesh.delc'
                    pipes:
                        - processor: to_mf6_txt
                          type: array
                          output_format: '{filename}'
            top:                     
                pipeline:
                    input: '@mesh.top'    
                    pipes:
                        - processor: to_mf6_txt
                          type: array
                          output_format: '{filename}'
            botm:
                pipeline:
                    input: '@mesh.bottoms'
                    pipes:
                        - processor: to_mf6_txt
                          type: array
                          output_format: '{filename}'
            idomain:
                pipeline:
                    input: '@mesh.active_domain'
                    pipes:
                        - processor: to_mf6_txt
                          type: array
                          output_format: '{filename}'
        func: 'flopy.mf6.ModflowGwfdis'
        duplicates_allowed: False
        default_build:
            allowed: True

    ic: 
        build_dependencies: 
            model: '@module.gwf'
        func: 'flopy.mf6.ModflowGwfic'
        duplicates_allowed: False

    sto: 
        build_dependencies: 
            model: '@module.gwf'
        func: 'flopy.mf6.ModflowGwfsto'
        duplicates_allowed: False
    
## Simple stress packages ----------------------

    wel:
        build_dependencies: 
            model: '@module.gwf'
        func: 'flopy.mf6.ModflowGwfwel'
        duplicates_allowed: True


    drn: 
        build_dependencies: 
            model: '@module.gwf'
            stressperioddata:
                pipeline:
                    input:
                        cond: '@pipeline.drn.src.cond'
                        elev: '@pipeline.drn.src.elev'
                        mask: '@mesh.active_domain'
                    pipes:
                        - processor: to_stress_period_data
                          cols: ['cond', 'elev']
                          format: 'some_format'
            cond: 
                pipeline:
                    input: '@input.drn.src.cond'
                    pipes:
                        - processor: discretize_2D
                          mesh: '@mesh.grid'
            elev:
                pipeline:
                    input: '@input.drn.src.elev' #TODO eventually this should be automatic
                    pipes:
                        - processor: discretize_2D
                          mesh: '@mesh.grid'
        func: flopy.mf6.ModflowGwfdrn
        duplicates_allowed: True


    ghb:
        build_dependencies: 
            model: '@module.gwf'          
        func: 'flopy.mf6.ModflowGwfghb'
        duplicates_allowed: True

    rcha:
        build_dependencies: 
            model: '@module.gwf'
        func: 'flopy.mf6.ModflowGwfrcha'
        duplicates_allowed: True
    
    rch:
        build_dependencies: 
            model: '@module.gwf'
        func: 'flopy.mf6.ModflowGwfrch'
        duplicates_allowed: True


    # ??
    sfr:
        build_dependencies: 
            model: '@module.gwf'
        func: 'flopy.mf6.ModflowGwfsfr'
        duplicates_allowed: True

    oc:
        build_dependencies: 
            model: '@module.gwf'
        func: 'flopy.mf6.ModflowGwfoc'
        duplicates_allowed: True