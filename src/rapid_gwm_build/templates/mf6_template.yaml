# TODO
# - how does Simulation know that it needs a discretization module?
# - how does Simulation know what a tdis module is?
module_templates:
    sim:
        # runtime_dependencies: #TODO: this is a special list of required minimum packages if this module is built
        #     - gwf
        #     - tdis
        #     - ims
        type: BasicModule
        func: 'flopy.mf6.MFSimulation'
        duplicates_allowed: False
        default_build:
            allowed: True

    tdis:
        type: TimeDiscretizationModule
        build_dependencies: 
            simulation: '@output.module.sim.default'
        # parameters:
        #     period_data: ['nper', 'perlen', 'nstp', 'steady'] #TODO: this is a special list of adjustable parameters which are not explicitly called
        func: 'flopy.mf6.ModflowTdis'
        duplicates_allowed: False
        default_build:
            allowed: True
            parameters:
                time_units: 'days'
                start_date_time: '2020-01-01'
                nper: 1
                perioddata:
                    - [1., 1, 1.] # perlen, nstp, tsmult

    ims:
        type: BasicModule
        build_dependencies: 
            simulation: '@output.module.sim.default'
        func: 'flopy.mf6.ModflowIms'
        duplicates_allowed: False
        default_build:
            allowed: True


    ## GWF packages ----------------------
    gwf:
        type: BasicModule
        build_dependencies: 
            simulation: '@output.module.sim.default'
        func: 'flopy.mf6.ModflowGwf'
        duplicates_allowed: True
        default_build:
            allowed: True

    npf: 
        type: BasicModule
        build_dependencies: 
            model: '@output.module.gwf.default' # referencing {modules.gwf..output}
        func: 'flopy.mf6.ModflowGwfnpf'
        duplicates_allowed: True
        default_build:
            allowed: True

    dis:
        type: SpatialDiscretizationModule
        build_dependencies: 
            model: '@output.module.gwf.default'
            top: '@output.mesh.top'
            botm: '@output.mesh.botm'
            idomain: '@output.mesh.active_domain'
        func: 'flopy.mf6.ModflowGwfdis'
        duplicates_allowed: False
        default_build:
            allowed: True

    ic: 
        type: BasicModule
        build_dependencies: 
            model: '@output.module.gwf.default'
        func: 'flopy.mf6.ModflowGwfic'
        duplicates_allowed: False

    sto: 
        
        type: BasicModule
        build_dependencies: 
            model: '@output.module.gwf.default'
        func: 'flopy.mf6.ModflowGwfsto'
        duplicates_allowed: False
    
## Simple stress packages ----------------------

    wel:
        type: StressModule
        build_dependencies: 
            model: '@output.module.gwf.default'
        func: 'flopy.mf6.ModflowGwfwel'
        duplicates_allowed: True


    drn: 
        type: StressModule
        build_dependencies: 
            model: '@output.module.gwf.default'
            stressperioddata:
                pipes:
                    - stress_period_data: [data.drn..cond, data.drn..elev]
        data:
            cond: #output -> @data.drn.<name_mod>.cond
                pipes:
                    - discretize_2D: #pipeline_name: {input: [input1, input2], kwargs: {kwarg1: value1, kwarg2: value2}}
                        input: [input.modules.drn..cond]
                        kwargs: null #placeholder for future kwargs
            elev:
                pipes:
                    - discretize_2D:
                        input: [input.modules.drn..elev]
        func: flopy.mf6.ModflowGwfdrn
        duplicates_allowed: True


    ghb:
        type: StressModule
        build_dependencies: 
            model: '@output.module.gwf.default'          
        func: 'flopy.mf6.ModflowGwfghb'
        duplicates_allowed: True

    rcha:
        type: StressModule
        build_dependencies: 
            model: '@output.module.gwf.default'
        func: 'flopy.mf6.ModflowGwfrcha'
        duplicates_allowed: True


    # ??
    sfr:
        type: StressModule
        build_dependencies: 
            model: '@output.module.gwf.default'
        func: 'flopy.mf6.ModflowGwfsfr'
        duplicates_allowed: True

    oc:
        type: BasicModule
        build_dependencies: 
            model: '@output.module.gwf.default'
        func: 'flopy.mf6.ModflowGwfoc'
        duplicates_allowed: True